#!/usr/bin/env python

import os
import subprocess
import sys
import argparse

def run_playbook(playbook, syntax_check):
    print("devenv detected {0}. running command:".format(playbook))
    command = ["ansible-playbook", os.path.expanduser("~/.devenv/playbooks/{0}.yml".format(playbook)), "-i", os.path.expanduser("~/.devenv/playbooks/inventory")]
    if syntax_check: command.append("--syntax-check")
    print (" ".join(command))
    subprocess.check_call(command)

def update_repository():
    origWD = os.getcwd()
    os.chdir(os.path.expanduser("~/.devenv"))
    subprocess.check_call(["git", "pull"])
    os.chdir(origWD)

def arg_parser():
    parser = argparse.ArgumentParser(
        description="install applications and symlink dotfiles"
    )
    parser.add_argument(
        "-s",
        action="store_true",
        dest="syntax_check",
        help="Run ansible-playbook with --syntax-check option, for use during development"
    )
    parser.add_argument(
        "-l",
        action="store_true",
        dest="local_only",
        help="Omit the initial 'git pull' step and run your local version of the playbooks"
    )
    parser.add_argument(
        '-t',
        nargs='*',
        help='Specify which tags you wish run in the playbooks'
    )
    return parser

def main():
    p = arg_parser()
    arguments = p.parse_args()

    if (arguments.local_only is not True) and (arguments.syntax_check is not True):
        update_repository()

    # if (arguments.tags is not

    if os.uname()[0] == "Linux":
        run_playbook("ubuntu", arguments.syntax_check)
    else:
        run_playbook("osx", arguments.syntax_check)


if __name__ == '__main__':
  main()
