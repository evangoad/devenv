#antigen
source ~/.antigen/antigen.zsh
antigen use oh-my-zsh
antigen bundle git
antigen bundle zsh-users/zsh-completions
antigen bundle superbrothers/zsh-kubectl-prompt
antigen theme cloud
antigen apply

### OHMYZSH fix
#   https://github.com/ohmyzsh/ohmyzsh/issues/7094
if [ "$_Z_NO_RESOLVE_SYMLINKS" ]; then
    _z_precmd() {
        (_z --add "${PWD:a}" &)
		: $RANDOM
    }
else
    _z_precmd() {
        (_z --add "${PWD:A}" &)
		: $RANDOM
    }
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

export PATH="/usr/local/sbin:$PATH"

# exercism
export PATH="$HOME/.exercism:$PATH"

#rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# stop spring
export DISABLE_SPRING="true"

# tmuxinator
export EDITOR="vim"

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Postgres.app on OSX
export PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"

# keychain
# keychain $HOME/.ssh/id_rsa

# z
export _Z_DATA="$HOME/.zdata"
. ~/.z/z.sh

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

export PRE_COMMIT_USE_REEK=true

# alias
alias fit="git reset --hard"
alias peace="sudo poweroff"
alias be="bundle exec"
alias moo="bundle exec rake db:migrate"
alias gi="git"
alias t="git status"
alias b="bundle"
alias z!="source ~/.zshrc"

. $HOME/.workstuff

BASE_IAM=$(aws sts get-caller-identity --output text --query 'Arn')

prompt_iam() {
  local iam='';
  if [[ -v GO_MFA_ASSUME_ROLE ]]; then
    iam="%{$fg[green]%}$(echo $GO_MFA_ASSUME_ROLE | grep -o 'role.*')"
  else
    iam="%{$fg[blue]%}$(echo $BASE_IAM | grep -o 'user.*')"
  fi
  echo -e "${1}${iam}";
}

prompt_kubectl() {
  local kube='';
  kube=$(echo $ZSH_KUBECTL_PROMPT | grep -o 'cluster.*')
  echo -e $kube;
}

autoload -U colors; colors
RPROMPT='$(prompt_iam)%{$fg[blue]%}|$(prompt_kubectl)%{$reset_color%}'

autoload bashcompinit
bashcompinit

