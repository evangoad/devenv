""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Evan Goad's vimrc
" Lots of borrowed things from @mikeastock and @bobcats
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible
filetype off

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

au BufRead,BufNewFile {COMMIT_EDITMSG} set ft=gitcommit
au BufRead,BufNewFile {.ts} set ft=typescript
au BufRead,BufNewFile *.md setlocal wrap linebreak nolist
au BufRead,BufNewFile hg-editor*.txt setlocal textwidth=80
filetype plugin indent on
set autoindent
set backspace=indent,eol,start
set background=dark
set encoding=utf-8
set expandtab
set foldenable
set foldlevel=100
set foldmethod=marker
set foldopen=block,hor,mark,percent,quickfix,tag
set formatoptions-=or
set hidden
set history=10000
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set matchtime=5
set mouse=a
set nobackup
set noerrorbells
set noswapfile
set novisualbell
set nowrap
set nu
set ruler
set scroll=15
set shiftwidth=2
set showcmd
set showmatch
set smartcase
set smarttab
set softtabstop=2
set tabstop=2
set textwidth=0
set wildmenu
set wildmode=longest,list
syntax on

:let mapleader = " "

map <c-p> :FZF<CR>
set rtp+=~/.fzf

map <ScrollWheelUp> <C-U>
map <ScrollWheelDown> <C-D>

map <C-n> :NERDTreeToggle<CR>

" ctags stuff i don't understand
map <A-[> :tab split<CR>:exec("tag ".expand(<cword>))<CR>
map <A-]> :vsp <CR>:exec("tag ".expand(<cword>))<CR>

" Easy Align
"Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

let g:bufferline_echo = 0

" configure ruby file type
au BufRead,BufNewFile {Gemfile,Rakefile,Capfile,Guardfile,*.rake,config.ru} set ft=ruby

" Rubocop settings
let g:vimrubocop_keymap = 0
nmap <Leader>r :RuboCop<CR>

" Vroom settings
let g:vroom_detect_spec_helper = 1
let g:vroom_use_binstubs = 0
let g:vroom_cucumber_path = 'cucumber'
let g:vroom_use_vimux = 1
map <Leader>t :VroomRunTestFile<CR>
map <Leader>x :VroomCloseRunner<CR>

" Fast saving
nmap <leader>w :w!<cr>

" Fast vim closing
nnoremap <leader>qq :q<cr>

" Switch back to previous file
nnoremap <leader><leader> <c-^>

" Window navigation
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
imap <c-c> <esc>

" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

" Contextual tab key
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

if !has('python')
  echo 'In order to use pymatcher plugin, you need +python compiled vim'
else
  let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
endif
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:20'
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_max_files = 0
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:CtrlMaxFiles=40000
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'

" Airline settings

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

nmap <leader>h :bprev<CR>
nmap <leader>l :bnext<CR>
nmap <leader>b :b

" Fast buffer closing
nmap <leader>q :bp\|bd #<CR>

" Tslime
nmap <leader>tr <Plug>SetTmuxVars

" Colorcolumn from Jon
nmap <leader>uu :let &colorcolumn=join(range(81,999),",")<CR>
nmap <leader>uo :let &colorcolumn=join(range(999,999),",")<CR>

" colorscheme
colorscheme hybrid

